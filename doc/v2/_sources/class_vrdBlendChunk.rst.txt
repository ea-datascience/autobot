-------------
vrdBlendChunk
-------------


.. _vredvrdBlendChunk:
.. py:class:: vrdBlendChunk

(Inherits :py:class:`vrdMaterialChunk`)

This class represents a blend chunk.



    .. _vredvrdBlendChunk.Equation:
    .. py:class:: Equation




            

            .. _vredvrdBlendChunk.Equation.None_:
            .. py:data:: None_


            

            .. _vredvrdBlendChunk.Equation.Clear:
            .. py:data:: Clear


            

            .. _vredvrdBlendChunk.Equation.And:
            .. py:data:: And


            

            .. _vredvrdBlendChunk.Equation.AndReverse:
            .. py:data:: AndReverse


            

            .. _vredvrdBlendChunk.Equation.Copy:
            .. py:data:: Copy


            

            .. _vredvrdBlendChunk.Equation.AndInverted:
            .. py:data:: AndInverted


            

            .. _vredvrdBlendChunk.Equation.Noop:
            .. py:data:: Noop


            

            .. _vredvrdBlendChunk.Equation.Xor:
            .. py:data:: Xor


            

            .. _vredvrdBlendChunk.Equation.Or:
            .. py:data:: Or


            

            .. _vredvrdBlendChunk.Equation.Nor:
            .. py:data:: Nor


            

            .. _vredvrdBlendChunk.Equation.Equiv:
            .. py:data:: Equiv


            

            .. _vredvrdBlendChunk.Equation.Invert:
            .. py:data:: Invert


            

            .. _vredvrdBlendChunk.Equation.OrReverse:
            .. py:data:: OrReverse


            

            .. _vredvrdBlendChunk.Equation.CopyInverted:
            .. py:data:: CopyInverted


            

            .. _vredvrdBlendChunk.Equation.OrInverted:
            .. py:data:: OrInverted


            

            .. _vredvrdBlendChunk.Equation.Nand:
            .. py:data:: Nand


            

            .. _vredvrdBlendChunk.Equation.Set:
            .. py:data:: Set


    .. _vredvrdBlendChunk.SrcFactor:
    .. py:class:: SrcFactor




            

            .. _vredvrdBlendChunk.SrcFactor.Zero:
            .. py:data:: Zero


            

            .. _vredvrdBlendChunk.SrcFactor.One:
            .. py:data:: One


            

            .. _vredvrdBlendChunk.SrcFactor.SrcColor:
            .. py:data:: SrcColor


            

            .. _vredvrdBlendChunk.SrcFactor.OneMinusSrcColor:
            .. py:data:: OneMinusSrcColor


            

            .. _vredvrdBlendChunk.SrcFactor.DstColor:
            .. py:data:: DstColor


            

            .. _vredvrdBlendChunk.SrcFactor.OneMinusDstColor:
            .. py:data:: OneMinusDstColor


            

            .. _vredvrdBlendChunk.SrcFactor.SrcAlpha:
            .. py:data:: SrcAlpha


            

            .. _vredvrdBlendChunk.SrcFactor.OneMinusSrcAlpha:
            .. py:data:: OneMinusSrcAlpha


            

            .. _vredvrdBlendChunk.SrcFactor.DstAlpha:
            .. py:data:: DstAlpha


            

            .. _vredvrdBlendChunk.SrcFactor.OneMinusDstAlpha:
            .. py:data:: OneMinusDstAlpha


            

            .. _vredvrdBlendChunk.SrcFactor.ConstantColor:
            .. py:data:: ConstantColor


            

            .. _vredvrdBlendChunk.SrcFactor.OneMinusConstantColor:
            .. py:data:: OneMinusConstantColor


            

            .. _vredvrdBlendChunk.SrcFactor.SrcAlphaSaturate:
            .. py:data:: SrcAlphaSaturate


    .. _vredvrdBlendChunk.DstFactor:
    .. py:class:: DstFactor




            

            .. _vredvrdBlendChunk.DstFactor.Zero:
            .. py:data:: Zero


            

            .. _vredvrdBlendChunk.DstFactor.One:
            .. py:data:: One


            

            .. _vredvrdBlendChunk.DstFactor.SrcColor:
            .. py:data:: SrcColor


            

            .. _vredvrdBlendChunk.DstFactor.OneMinusSrcColor:
            .. py:data:: OneMinusSrcColor


            

            .. _vredvrdBlendChunk.DstFactor.DstColor:
            .. py:data:: DstColor


            

            .. _vredvrdBlendChunk.DstFactor.OneMinusDstColor:
            .. py:data:: OneMinusDstColor


            

            .. _vredvrdBlendChunk.DstFactor.SrcAlpha:
            .. py:data:: SrcAlpha


            

            .. _vredvrdBlendChunk.DstFactor.OneMinusSrcAlpha:
            .. py:data:: OneMinusSrcAlpha


            

            .. _vredvrdBlendChunk.DstFactor.DstAlpha:
            .. py:data:: DstAlpha


            

            .. _vredvrdBlendChunk.DstFactor.OneMinusDstAlpha:
            .. py:data:: OneMinusDstAlpha


            

            .. _vredvrdBlendChunk.DstFactor.ConstantColor:
            .. py:data:: ConstantColor


            

            .. _vredvrdBlendChunk.DstFactor.OneMinusConstantColor:
            .. py:data:: OneMinusConstantColor





Summary
=======

Functions:
    * :ref:`getColor() → QVector3D<vredvrdBlendChunk.getColor()>`
    * :ref:`getDstFactor() → vrdBlendChunk.DstFactor<vredvrdBlendChunk.getDstFactor()>`
    * :ref:`getEquation() → vrdBlendChunk.Equation<vredvrdBlendChunk.getEquation()>`
    * :ref:`getSrcFactor() → vrdBlendChunk.SrcFactor<vredvrdBlendChunk.getSrcFactor()>`
    * :ref:`setColor(value) <vredvrdBlendChunk.setColor(value)>`
    * :ref:`setDstFactor(srcFactor) <vredvrdBlendChunk.setDstFactor(srcFactor)>`
    * :ref:`setEquation(equation) <vredvrdBlendChunk.setEquation(equation)>`
    * :ref:`setSrcFactor(srcFactor) <vredvrdBlendChunk.setSrcFactor(srcFactor)>`


Functions
=========


.. _vredvrdBlendChunk.getColor():
.. py:method:: vrdBlendChunk.getColor()

    This is the constant color used by blend modes *_CONSTANT_*.




    :return: The color value.
    :rtype: QVector3D

.. _vredvrdBlendChunk.getDstFactor():
.. py:method:: vrdBlendChunk.getDstFactor()

    The frame buffer pixel is multiplied by the destination factor.Legal values are directly taken from the glBlendFunc() manpage.




    :return: The destination factor.
    :rtype: :ref:`vrdBlendChunk.DstFactor <vredvrdBlendChunk.DstFactor>`

.. _vredvrdBlendChunk.getEquation():
.. py:method:: vrdBlendChunk.getEquation()

    The equation used to combine the two values. Only available where GL_ARB_imaging is supported.See glBlendEquation() for details.




    :return: The equation.
    :rtype: :ref:`vrdBlendChunk.Equation <vredvrdBlendChunk.Equation>`

.. _vredvrdBlendChunk.getSrcFactor():
.. py:method:: vrdBlendChunk.getSrcFactor()

    The incoming pixel is multiplied by the source factor. Legal values are directly taken from the glBlendFunc() manpage.




    :return: The source factor.
    :rtype: :ref:`vrdBlendChunk.SrcFactor <vredvrdBlendChunk.SrcFactor>`

.. _vredvrdBlendChunk.setColor(value):
.. py:method:: vrdBlendChunk.setColor(value)

    This is the constant color used by blend modes *_CONSTANT_*.



    :param value: The color value
    :type value: QVector3D

    
    

.. _vredvrdBlendChunk.setDstFactor(srcFactor):
.. py:method:: vrdBlendChunk.setDstFactor(srcFactor)

    The frame buffer pixel is multiplied by the destination factor.Legal values are directly taken from the glBlendFunc() manpage.



    :param srcFactor: The source factor
    :type srcFactor: :ref:`vrdBlendChunk.DstFactor <vredvrdBlendChunk.DstFactor>`

    
    

.. _vredvrdBlendChunk.setEquation(equation):
.. py:method:: vrdBlendChunk.setEquation(equation)

    The equation used to combine the two values. Only available where GL_ARB_imaging is supported.See glBlendEquation() for details.



    :param equation: The equation
    :type equation: :ref:`vrdBlendChunk.Equation <vredvrdBlendChunk.Equation>`

    
    

.. _vredvrdBlendChunk.setSrcFactor(srcFactor):
.. py:method:: vrdBlendChunk.setSrcFactor(srcFactor)

    The incoming pixel is multiplied by the source factor. Legal values are directly taken from the glBlendFunc() manpage.



    :param srcFactor: The source factor
    :type srcFactor: :ref:`vrdBlendChunk.SrcFactor <vredvrdBlendChunk.SrcFactor>`

    
    










