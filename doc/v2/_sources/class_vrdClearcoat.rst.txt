------------
vrdClearcoat
------------


.. _vredvrdClearcoat:
.. py:class:: vrdClearcoat

(Inherits :py:class:`vrdSceneObject`)

This class is used for clearcoat properties.



    .. _vredvrdClearcoat.Type:
    .. py:class:: Type




            Off: No clearcoat is used.

            .. _vredvrdClearcoat.Type.Off:
            .. py:data:: Off


            Fast: Schlick approximation for the fresnel term of the clearcoat is used.

            .. _vredvrdClearcoat.Type.Fast:
            .. py:data:: Fast


            Accurate: Cook-Torrance approximation for the fresnel term of the clearcoat is used.

            .. _vredvrdClearcoat.Type.Accurate:
            .. py:data:: Accurate


            UseRefractionIndex: Uses the refraction index instead of the reflectivity for the clearcoat calculation.

            .. _vredvrdClearcoat.Type.UseRefractionIndex:
            .. py:data:: UseRefractionIndex





Summary
=======

Functions:
    * :ref:`getColor() → QVector3D<vredvrdClearcoat.getColor()>`
    * :ref:`getColorSpectrum() → vrSpectrum<vredvrdClearcoat.getColorSpectrum()>`
    * :ref:`getDensity() → float<vredvrdClearcoat.getDensity()>`
    * :ref:`getOrangePeelFrequency() → float<vredvrdClearcoat.getOrangePeelFrequency()>`
    * :ref:`getOrangePeelIntensity() → float<vredvrdClearcoat.getOrangePeelIntensity()>`
    * :ref:`getReflectivity() → float<vredvrdClearcoat.getReflectivity()>`
    * :ref:`getRefractionIndex() → float<vredvrdClearcoat.getRefractionIndex()>`
    * :ref:`getRoughness() → float<vredvrdClearcoat.getRoughness()>`
    * :ref:`getThickness() → float<vredvrdClearcoat.getThickness()>`
    * :ref:`getType() → vrdClearcoat.Type<vredvrdClearcoat.getType()>`
    * :ref:`getUseOrangePeel() → bool<vredvrdClearcoat.getUseOrangePeel()>`
    * :ref:`setColor(value) <vredvrdClearcoat.setColor(value)>`
    * :ref:`setColorSpectrum(value) <vredvrdClearcoat.setColorSpectrum(value)>`
    * :ref:`setDensity(value) <vredvrdClearcoat.setDensity(value)>`
    * :ref:`setOrangePeelFrequency(value) <vredvrdClearcoat.setOrangePeelFrequency(value)>`
    * :ref:`setOrangePeelIntensity(value) <vredvrdClearcoat.setOrangePeelIntensity(value)>`
    * :ref:`setReflectivity(value) <vredvrdClearcoat.setReflectivity(value)>`
    * :ref:`setRefractionIndex(value) <vredvrdClearcoat.setRefractionIndex(value)>`
    * :ref:`setRoughness(value) <vredvrdClearcoat.setRoughness(value)>`
    * :ref:`setThickness(value) <vredvrdClearcoat.setThickness(value)>`
    * :ref:`setType(value) <vredvrdClearcoat.setType(value)>`
    * :ref:`setUseOrangePeel(value) <vredvrdClearcoat.setUseOrangePeel(value)>`
    * :ref:`supportsOrangePeel() → bool<vredvrdClearcoat.supportsOrangePeel()>`
    * :ref:`supportsRefractionIndex() → bool<vredvrdClearcoat.supportsRefractionIndex()>`
    * :ref:`supportsThickness() → bool<vredvrdClearcoat.supportsThickness()>`


Functions
=========


.. _vredvrdClearcoat.getColor():
.. py:method:: vrdClearcoat.getColor()

    Gets the color of the clearcoat.




    :return: Current used value of clearcoat color.
    :rtype: QVector3D

.. _vredvrdClearcoat.getColorSpectrum():
.. py:method:: vrdClearcoat.getColorSpectrum()

    Gets the spectrum of the clearcoat color.




    :return: The current used spectrum for clearcoat color.
    :rtype: vrSpectrum

.. _vredvrdClearcoat.getDensity():
.. py:method:: vrdClearcoat.getDensity()

    Gets the density.




    :return: Current used value for the density
    :rtype: float

.. _vredvrdClearcoat.getOrangePeelFrequency():
.. py:method:: vrdClearcoat.getOrangePeelFrequency()

    Gets the bump structure's noise frequency.




    :return: The current used value for the bump structure's noise frequency.
    :rtype: float

.. _vredvrdClearcoat.getOrangePeelIntensity():
.. py:method:: vrdClearcoat.getOrangePeelIntensity()

    Gets the bump structure's intensity.




    :return: The current used bump structure's intensity
    :rtype: float

.. _vredvrdClearcoat.getReflectivity():
.. py:method:: vrdClearcoat.getReflectivity()

    Gets value of clearcoat reflective intensity.




    :return: Current value of clearcoat reflective intensity.
    :rtype: float

.. _vredvrdClearcoat.getRefractionIndex():
.. py:method:: vrdClearcoat.getRefractionIndex()

    Gets value of clearcoat refraction index.




    :return: Current value of clearcoat refraction index.
    :rtype: float

.. _vredvrdClearcoat.getRoughness():
.. py:method:: vrdClearcoat.getRoughness()

    Gets value of clearcoat roughness.




    :return: Current value of clearcoat roughness.
    :rtype: float

.. _vredvrdClearcoat.getThickness():
.. py:method:: vrdClearcoat.getThickness()

    Gets the thickness of the clearcoat layer.




    :return: Current used value for the thickness
    :rtype: float

.. _vredvrdClearcoat.getType():
.. py:method:: vrdClearcoat.getType()

    Get the value of clearcoat type.




    :return: Current value of clearcoat type.
    :rtype: :ref:`vrdClearcoat.Type <vredvrdClearcoat.Type>`

.. _vredvrdClearcoat.getUseOrangePeel():
.. py:method:: vrdClearcoat.getUseOrangePeel()

    Query the state of activation of a noisy bump structure in the shader.




    :return: Current state of activation of a noisy bump structure in the shader.
    :rtype: bool

.. _vredvrdClearcoat.setColor(value):
.. py:method:: vrdClearcoat.setColor(value)

    Sets the color of the clearcoat.



    :param value: New value of clearcoat color.
    :type value: QVector3D

    
    

.. _vredvrdClearcoat.setColorSpectrum(value):
.. py:method:: vrdClearcoat.setColorSpectrum(value)

    Sets the spectrum of the clearcoat color.



    :param value: New spectrum for clearcoat color
    :type value: vrSpectrum

    
    

.. _vredvrdClearcoat.setDensity(value):
.. py:method:: vrdClearcoat.setDensity(value)

    Sets the density A value of 0 will use the clearcoat color as reflection color. A value larger than 0 will use the clearcoat color to tint the refraction of the clearcoat depending on the thickness and density settings.



    :param value: New value for the density
    :type value: float

    
    

.. _vredvrdClearcoat.setOrangePeelFrequency(value):
.. py:method:: vrdClearcoat.setOrangePeelFrequency(value)

    Sets the bump structure's noise frequency. The higher the value, the closer together the orange peel bump.



    :param value: The new value for the bump structure's noise frequency.
    :type value: float

    
    

.. _vredvrdClearcoat.setOrangePeelIntensity(value):
.. py:method:: vrdClearcoat.setOrangePeelIntensity(value)

    Sets the bump structure's intensity. The higher the value, the more visible the orange peel and less smooth the clearcoat surface.



    :param value: The new bump structure's intensity
    :type value: float

    
    

.. _vredvrdClearcoat.setReflectivity(value):
.. py:method:: vrdClearcoat.setReflectivity(value)

    Sets the clearcoat reflective intensity. It defines the amount of light reflected at normal incidence. The higher the value, the more reflective the surface.



    :param value: New value for clearcoat reflective intensity.
    :type value: float

    
    

.. _vredvrdClearcoat.setRefractionIndex(value):
.. py:method:: vrdClearcoat.setRefractionIndex(value)

    Sets the clearcoat index of refraction.



    :param value: New value for clearcoat refraction index.
    :type value: float

    
    

.. _vredvrdClearcoat.setRoughness(value):
.. py:method:: vrdClearcoat.setRoughness(value)

    Controls the sharpness of the clearcoat reflections. The higher the value, the rougher the microscopic structure of the surface and more diffuse the reflections. The lower the value, the glossier the material. A value of 0 creates mirror reflections.



    :param value: New value for clearcoat roughness.
    :type value: float

    
    

.. _vredvrdClearcoat.setThickness(value):
.. py:method:: vrdClearcoat.setThickness(value)

    Sets the thickness of the clearcoat layer. A value of 0 will use the clearcoat color as reflection color. A value larger than 0 will use the clearcoat color to tint the refraction of the clearcoat depending on the thickness and density settings.



    :param value: New value for the thickness
    :type value: float

    
    

.. _vredvrdClearcoat.setType(value):
.. py:method:: vrdClearcoat.setType(value)

    Defines the computation method for the clearcoat. Depending on the material the following options can be available:

    Off: No clearcoat is used.

    Fast: Schlick approximation for the fresnel term of the clearcoat is used.

    Accurate: Cook-Torrance approximation for the fresnel term of the clearcoat is used.

    UseRefractionIndex: Uses the refraction index instead of the reflectivity for the clearcoat calculation.

    :param value: New value of clearcoat type.
    :type value: :ref:`vrdClearcoat.Type <vredvrdClearcoat.Type>`

    
    

.. _vredvrdClearcoat.setUseOrangePeel(value):
.. py:method:: vrdClearcoat.setUseOrangePeel(value)

    Activates a noisy bump structure in the shader.



    :param value: New state of activation of a noisy bump structure in the shader.
    :type value: bool

    
    

.. _vredvrdClearcoat.supportsOrangePeel():
.. py:method:: vrdClearcoat.supportsOrangePeel()

    




    :return: True if orange peel properties can be changed for this clearcoat, False otherwise
    :rtype: bool

.. _vredvrdClearcoat.supportsRefractionIndex():
.. py:method:: vrdClearcoat.supportsRefractionIndex()

    




    :return: True if type vrdClearcoat::Type::UseRefractionIndex and refraction index property are supported for this clearcoat, False otherwise
    :rtype: bool

.. _vredvrdClearcoat.supportsThickness():
.. py:method:: vrdClearcoat.supportsThickness()

    




    :return: True if thickness and density properties can be changed for this clearcoat, False otherwise
    :rtype: bool










