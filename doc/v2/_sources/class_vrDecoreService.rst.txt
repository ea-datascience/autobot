---------------
vrDecoreService
---------------


.. _vredvrDecoreService:
.. py:class:: vrDecoreService

(Inherits :py:class:`vrBaseService`)

Service for object decoring/optimization.

Decoring removes redundant geometry that is inside other geometry, like screws and mountings inside a door covering. A virtual camera flies around the selected object, takes screen shots, and removes any non-visible geometry.

This feature only works with OpenGL.

This is a basic example:

.. code-block:: python

     settings = vrdDecoreSettings()
     settings.setResolution(1024)
     settings.setQualitySteps(8)
     settings.setCorrectFaceNormals(False)
     settings.setDecoreEnabled(True)
     settings.setDecoreMode(vrGeometryTypes.DecoreMode.Remove)
     settings.setSubObjectMode(vrGeometryTypes.DecoreSubObjectMode.Triangles)
     settings.setTransparentObjectMode(vrGeometryTypes.DecoreTransparentObjectMode.Ignore)
     treatAsCombinedObject = True
     nodesToDecore = vrNodeService.findNodes('GeometryToDecore')
     vrDecoreService.decore(nodesToDecore, treatAsCombinedObject, settings)
..






Summary
=======

Functions:
    * :ref:`decore(nodes, treatAsCombinedObject, settings) <vredvrDecoreService.decore(nodes, treatAsCombinedObject, settings)>`
    * :ref:`getSettings() â†’ vrdDecoreSettings<vredvrDecoreService.getSettings()>`
    * :ref:`setSettings(settings) <vredvrDecoreService.setSettings(settings)>`

Signals:
    * :ref:`settingsChanged() <vredvrDecoreService.settingsChanged()>`


Functions
=========


.. _vredvrDecoreService.decore(nodes, treatAsCombinedObject, settings):
.. py:method:: vrDecoreService.decore(nodes, treatAsCombinedObject, settings)

    Decores the given objects with the given settings.



    :param nodes: Nodes to decore
    :type nodes: List[vrdNode]

    :param treatAsCombinedObject: Defines if the given nodes are treated as combined objects or separately
    :type treatAsCombinedObject: bool

    :param settings: Settings for decoring objects
    :type settings: vrdDecoreSettings

    
    

.. _vredvrDecoreService.getSettings():
.. py:method:: vrDecoreService.getSettings()

    Return the current user interface (GUI) settings.




    :return: Settings for decoring objects
    :rtype: vrdDecoreSettings

.. _vredvrDecoreService.setSettings(settings):
.. py:method:: vrDecoreService.setSettings(settings)

    Set setting to the user interface (GUI)



    :param settings: Settings for decoring objects
    :type settings: vrdDecoreSettings

    
    






Signals
=======


.. _vredvrDecoreService.settingsChanged():
.. py:method:: vrDecoreService.settingsChanged()

    Signal is emitted when a parameter is changed.




    
    


