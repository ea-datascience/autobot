--------------------------------
vrdUVTriplanarProjectionSettings
--------------------------------


.. _vredvrdUVTriplanarProjectionSettings:
.. py:class:: vrdUVTriplanarProjectionSettings

(Inherits :py:class:`vrdData`)

Class for triplanar UV coordinate projection settings.

How to setup a triplanar projection:

Set 3d projection center with :any:`vrdUVTriplanarProjectionSettings.setCenter(center) <vredvrdUVTriplanarProjectionSettings.setCenter(center)>`.

Set 3d projection rotation with :any:`vrdUVTriplanarProjectionSettings.setRotation3D(rotation) <vredvrdUVTriplanarProjectionSettings.setRotation3D(rotation)>`.

Each plane can be additionally rotated around its axis with :any:`vrdUVTriplanarProjectionSettings.setRotation2D(rotation) <vredvrdUVTriplanarProjectionSettings.setRotation2D(rotation)>`.

Set the base projection plane size in scene units with :any:`vrdUVTriplanarProjectionSettings.setSize(size) <vredvrdUVTriplanarProjectionSettings.setSize(size)>`.

Set additional repeat values to scale the projection planes with :any:`vrdUVTriplanarProjectionSettings.setRepeatU(repeat) <vredvrdUVTriplanarProjectionSettings.setRepeatU(repeat)>` and :any:`vrdUVTriplanarProjectionSettings.setRepeatV(repeat) <vredvrdUVTriplanarProjectionSettings.setRepeatV(repeat)>`.

Set an offset to shift the projection from the center, per plane, with :any:`vrdUVTriplanarProjectionSettings.setOffsetU(offset) <vredvrdUVTriplanarProjectionSettings.setOffsetU(offset)>` and :any:`vrdUVTriplanarProjectionSettings.setOffsetV(offset) <vredvrdUVTriplanarProjectionSettings.setOffsetV(offset)>`.

Also, you can use     :any:`vrUVService.getTriplanarProjectionDefaultSettings(nodes, textureWidth, textureHeight) <vredvrUVService.getTriplanarProjectionDefaultSettings(nodes, textureWidth, textureHeight)>` to query default initial values for a projection.





Summary
=======

Functions:
    * :ref:`getCenter() → QVector3D<vredvrdUVTriplanarProjectionSettings.getCenter()>`
    * :ref:`getFewerIslandsEnabled() → bool<vredvrdUVTriplanarProjectionSettings.getFewerIslandsEnabled()>`
    * :ref:`getOffsetU() → QVector3D<vredvrdUVTriplanarProjectionSettings.getOffsetU()>`
    * :ref:`getOffsetV() → QVector3D<vredvrdUVTriplanarProjectionSettings.getOffsetV()>`
    * :ref:`getRepeatU() → QVector3D<vredvrdUVTriplanarProjectionSettings.getRepeatU()>`
    * :ref:`getRepeatV() → QVector3D<vredvrdUVTriplanarProjectionSettings.getRepeatV()>`
    * :ref:`getRotation2D() → QVector3D<vredvrdUVTriplanarProjectionSettings.getRotation2D()>`
    * :ref:`getRotation3D() → QVector3D<vredvrdUVTriplanarProjectionSettings.getRotation3D()>`
    * :ref:`getSize() → QSizeF<vredvrdUVTriplanarProjectionSettings.getSize()>`
    * :ref:`setCenter(center) <vredvrdUVTriplanarProjectionSettings.setCenter(center)>`
    * :ref:`setFewerIslandsEnabled(enabled) <vredvrdUVTriplanarProjectionSettings.setFewerIslandsEnabled(enabled)>`
    * :ref:`setOffsetU(offset) <vredvrdUVTriplanarProjectionSettings.setOffsetU(offset)>`
    * :ref:`setOffsetV(offset) <vredvrdUVTriplanarProjectionSettings.setOffsetV(offset)>`
    * :ref:`setRepeatU(repeat) <vredvrdUVTriplanarProjectionSettings.setRepeatU(repeat)>`
    * :ref:`setRepeatV(repeat) <vredvrdUVTriplanarProjectionSettings.setRepeatV(repeat)>`
    * :ref:`setRotation2D(rotation) <vredvrdUVTriplanarProjectionSettings.setRotation2D(rotation)>`
    * :ref:`setRotation3D(rotation) <vredvrdUVTriplanarProjectionSettings.setRotation3D(rotation)>`
    * :ref:`setSize(size) <vredvrdUVTriplanarProjectionSettings.setSize(size)>`


Functions
=========


.. _vredvrdUVTriplanarProjectionSettings.getCenter():
.. py:method:: vrdUVTriplanarProjectionSettings.getCenter()

    




    :return: Get center of the projection in 3d world space.
    :rtype: QVector3D

.. _vredvrdUVTriplanarProjectionSettings.getFewerIslandsEnabled():
.. py:method:: vrdUVTriplanarProjectionSettings.getFewerIslandsEnabled()

    




    :return: Whether fewer islands option is enabled, see setFewerIslands(bool) for an explanation.
    :rtype: bool

.. _vredvrdUVTriplanarProjectionSettings.getOffsetU():
.. py:method:: vrdUVTriplanarProjectionSettings.getOffsetU()

    




    :return: U offsets of the projection planes for x, y and z projection.
    :rtype: QVector3D

.. _vredvrdUVTriplanarProjectionSettings.getOffsetV():
.. py:method:: vrdUVTriplanarProjectionSettings.getOffsetV()

    




    :return: V offsets of the projection planes for x, y and z projection.
    :rtype: QVector3D

.. _vredvrdUVTriplanarProjectionSettings.getRepeatU():
.. py:method:: vrdUVTriplanarProjectionSettings.getRepeatU()

    




    :return: U repeat values of the projection for x, y and z projection.
    :rtype: QVector3D

.. _vredvrdUVTriplanarProjectionSettings.getRepeatV():
.. py:method:: vrdUVTriplanarProjectionSettings.getRepeatV()

    




    :return: V repeat values of the projection for x, y and z projection.
    :rtype: QVector3D

.. _vredvrdUVTriplanarProjectionSettings.getRotation2D():
.. py:method:: vrdUVTriplanarProjectionSettings.getRotation2D()

    




    :return: Get 2d rotation angles in degrees.
    :rtype: QVector3D

.. _vredvrdUVTriplanarProjectionSettings.getRotation3D():
.. py:method:: vrdUVTriplanarProjectionSettings.getRotation3D()

    




    :return: Get 3d projection rotation angles in degrees.
    :rtype: QVector3D

.. _vredvrdUVTriplanarProjectionSettings.getSize():
.. py:method:: vrdUVTriplanarProjectionSettings.getSize()

    Get projection plane size in scene units.




    :return: Size in scene units
    :rtype: QSizeF

.. _vredvrdUVTriplanarProjectionSettings.setCenter(center):
.. py:method:: vrdUVTriplanarProjectionSettings.setCenter(center)

    Set center of the projection in 3d world space.



    :param center: Center of the projection in 3d world space.
    :type center: QVector3D

    
    

.. _vredvrdUVTriplanarProjectionSettings.setFewerIslandsEnabled(enabled):
.. py:method:: vrdUVTriplanarProjectionSettings.setFewerIslandsEnabled(enabled)

    



    :param enabled: When True, projects each plane until the projection encounters a projection angle that is not ideal. This can result in larger islands, and fewer of them. When False, projects all planes equally. It is particularly useful if you have a symmetrical model and you want the islands of the projection to be symmetrical.
    :type enabled: bool

    
    

.. _vredvrdUVTriplanarProjectionSettings.setOffsetU(offset):
.. py:method:: vrdUVTriplanarProjectionSettings.setOffsetU(offset)

    Set the U offsets to shift the projection from the center within the x, y and z projection.



    :param offset: Offsets in scene units
    :type offset: QVector3D

    
    

.. _vredvrdUVTriplanarProjectionSettings.setOffsetV(offset):
.. py:method:: vrdUVTriplanarProjectionSettings.setOffsetV(offset)

    Set the V offsets to shift the projection from the center within the x, y and z projection.



    :param offset: Offsets in scene units
    :type offset: QVector3D

    
    

.. _vredvrdUVTriplanarProjectionSettings.setRepeatU(repeat):
.. py:method:: vrdUVTriplanarProjectionSettings.setRepeatU(repeat)

    Set U repeat values to scale the projection within the x, y and z projection.



    :param repeat: Repeat values in scene units
    :type repeat: QVector3D

    
    

.. _vredvrdUVTriplanarProjectionSettings.setRepeatV(repeat):
.. py:method:: vrdUVTriplanarProjectionSettings.setRepeatV(repeat)

    Set V repeat values to scale the projection within the x, y and z projection.



    :param repeat: Repeat values in scene units
    :type repeat: QVector3D

    
    

.. _vredvrdUVTriplanarProjectionSettings.setRotation2D(rotation):
.. py:method:: vrdUVTriplanarProjectionSettings.setRotation2D(rotation)

    Set 2d rotation angles. This controls the rotation around the projection axes. The angles are Euler angles.



    :param rotation: Rotation angles in degrees.
    :type rotation: QVector3D

    
    

.. _vredvrdUVTriplanarProjectionSettings.setRotation3D(rotation):
.. py:method:: vrdUVTriplanarProjectionSettings.setRotation3D(rotation)

    Set 3d projection rotation angles. This controls the orientation of the projection planes. The angles are Euler angles (rotation order xyz).



    :param rotation: Rotation angles in degrees.
    :type rotation: QVector3D

    
    

.. _vredvrdUVTriplanarProjectionSettings.setSize(size):
.. py:method:: vrdUVTriplanarProjectionSettings.setSize(size)

    Set projection plane size in scene units. This base size is further scaled with the repeat value set by         :any:`vrdUVTriplanarProjectionSettings.setRepeatU(repeat) <vredvrdUVTriplanarProjectionSettings.setRepeatU(repeat)>` and :any:`vrdUVTriplanarProjectionSettings.setRepeatV(repeat) <vredvrdUVTriplanarProjectionSettings.setRepeatV(repeat)>`.



    :param size: Size in scene units
    :type size: QSizeF

    
    










