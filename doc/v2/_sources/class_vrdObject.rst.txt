---------
vrdObject
---------


.. _vredvrdObject:
.. py:class:: vrdObject



This is the base class for all decoupled objects in VRED.







Summary
=======

Functions:
    * :ref:`asType(type) → vrdObject<vredvrdObject.asType(type)>`
    * :ref:`getObjectId() → integer<vredvrdObject.getObjectId()>`
    * :ref:`isNull() → bool<vredvrdObject.isNull()>`
    * :ref:`isType(type) → bool<vredvrdObject.isType(type)>`


Functions
=========


.. _vredvrdObject.asType(type):
.. py:method:: vrdObject.asType(type)

    Tries to convert a         :any:`vrdObject <vredvrdObject>` to a different type.



    :param type: The type to convert to.
    :type type: vrdObject

    :return: The converted :any:`vrdObject <vredvrdObject>`. Check with :any:`vrdObject.isNull() <vredvrdObject.isNull()>` if the conversion succeeded.
    :rtype: vrdObject

.. _vredvrdObject.getObjectId():
.. py:method:: vrdObject.getObjectId()

    Returns the internal object id.




    :return: The object identifier.
    :rtype: integer

.. _vredvrdObject.isNull():
.. py:method:: vrdObject.isNull()

    Determines if the object is null.

    An object is null if its internal object has not been set so that its object id is 0. This is the case for all default constructed vrdObjects.

    An object is not null, when its internal object becomes invalid. For that specialized checks like :any:`vrdSceneObject.isValid() <vredvrdSceneObject.isValid()>` are needed.


    :return: True if null, False otherwise.
    :rtype: bool

.. _vredvrdObject.isType(type):
.. py:method:: vrdObject.isType(type)

    Determines whether the specified object is of a specific type.

    Example: To check if a specific object has a type derived from :any:`vrdMaterial <vredvrdMaterial>`, you can call this:

    .. code-block:: python
    
         if (someObject.isType(vrdMaterial)):
            print("material found!")
    ..
    

    Note, to check only the concrete type, use:

    .. code-block:: python
    
         # Matches only nodes that are a vrdTransformNode,
         # does not match nodes with type derived from vrdTransformNode:
         if (type(someObject) == vrdTransformNode):
            print("transform node found!")
    ..
    

    :param type: The object type
    :type type: vrdObject

    :return: True if the specified object is type, False otherwise.
    :rtype: bool










