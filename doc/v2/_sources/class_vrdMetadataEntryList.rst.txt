--------------------
vrdMetadataEntryList
--------------------


.. _vredvrdMetadataEntryList:
.. py:class:: vrdMetadataEntryList

(Inherits :py:class:`vrdObjectList`)

This class is used to manage     :any:`vrdMetadataEntry <vredvrdMetadataEntry>` entries of a :any:`vrdMetadataSet <vredvrdMetadataSet>`.

.. code-block:: python

     entries = metadataSet.getEntries()
     for e in entries:
         print(e.getKey())
..


Note: The entries are unordered.





Summary
=======

Functions:
    * :ref:`canInsert(entry) → bool<vredvrdMetadataEntryList.canInsert(entry)>`
    * :ref:`clear() <vredvrdMetadataEntryList.clear()>`
    * :ref:`contains(entry) → bool<vredvrdMetadataEntryList.contains(entry)>`
    * :ref:`count(entry) → integer<vredvrdMetadataEntryList.count(entry)>`
    * :ref:`data() → List[vrdMetadataEntry]<vredvrdMetadataEntryList.data()>`
    * :ref:`find(key) → vrdMetadataEntry<vredvrdMetadataEntryList.find(key)>`
    * :ref:`insert(entry) → bool<vredvrdMetadataEntryList.insert(entry)>`
    * :ref:`insert(entries) <vredvrdMetadataEntryList.insert(entries)>`
    * :ref:`remove(entry) → bool<vredvrdMetadataEntryList.remove(entry)>`
    * :ref:`removeKey(key) → bool<vredvrdMetadataEntryList.removeKey(key)>`
    * :ref:`size() → integer<vredvrdMetadataEntryList.size()>`


Functions
=========


.. _vredvrdMetadataEntryList.canInsert(entry):
.. py:method:: vrdMetadataEntryList.canInsert(entry)

    Check, if the given entry can be inserted.



    :param entry: 
    :type entry: vrdMetadataEntry

    :return: True, if insert is allowed
    :rtype: bool

.. _vredvrdMetadataEntryList.clear():
.. py:method:: vrdMetadataEntryList.clear()

    Removes all entries.




    
    

.. _vredvrdMetadataEntryList.contains(entry):
.. py:method:: vrdMetadataEntryList.contains(entry)

    Check if an element is already in the list.



    :param entry: An entry we are looking for.
    :type entry: vrdMetadataEntry

    :return: True, if the given entry is in this list
    :rtype: bool

.. _vredvrdMetadataEntryList.count(entry):
.. py:method:: vrdMetadataEntryList.count(entry)

    Count the occurrences of a given entry.



    :param entry: An entry we are looking for.
    :type entry: vrdMetadataEntry

    :return: The number of times the entry has been found in the list
    :rtype: integer

.. _vredvrdMetadataEntryList.data():
.. py:method:: vrdMetadataEntryList.data()

    Get all entries of this list.




    :return: List of elements
    :rtype: List[vrdMetadataEntry]

.. _vredvrdMetadataEntryList.find(key):
.. py:method:: vrdMetadataEntryList.find(key)

    Returns first occurrence with given key.



    :param key: The metadata entry key we are looking for.
    :type key: string

    :return: The found entry. If not found, it is null.
    :rtype: vrdMetadataEntry

.. _vredvrdMetadataEntryList.insert(entry):
.. py:method:: vrdMetadataEntryList.insert(entry)

    Insert an entry. The entry is not inserted if an entry with the same key is already in this list.



    :param entry: The entry to be inserted
    :type entry: vrdMetadataEntry

    :return: If the entry has been inserted
    :rtype: bool

.. _vredvrdMetadataEntryList.insert(entries):
.. py:method:: vrdMetadataEntryList.insert(entries)

    Insert the given entries into the list. Entries are not inserted if their key is already in this list.



    :param entries: The entries to be inserted
    :type entries: List[vrdMetadataEntry]

    
    

.. _vredvrdMetadataEntryList.remove(entry):
.. py:method:: vrdMetadataEntryList.remove(entry)

    Remove the given entry.



    :param entry: 
    :type entry: vrdMetadataEntry

    :return: True if removed.
    :rtype: bool

.. _vredvrdMetadataEntryList.removeKey(key):
.. py:method:: vrdMetadataEntryList.removeKey(key)

    Remove the entry with the given key.



    :param key: 
    :type key: string

    :return: 
    :rtype: bool

.. _vredvrdMetadataEntryList.size():
.. py:method:: vrdMetadataEntryList.size()

    




    :return: Number of elements in this list.
    :rtype: integer










