--------------------------------
vrdEnvironmentRaytracingSettings
--------------------------------


.. _vredvrdEnvironmentRaytracingSettings:
.. py:class:: vrdEnvironmentRaytracingSettings

(Inherits :py:class:`vrdSceneObject`)

This class is used for all environment raytracing properties.



    .. _vredvrdEnvironmentRaytracingSettings.Shadowing:
    .. py:class:: Shadowing




            FullSphere: Generates shadows based on the full environment sphere.

            .. _vredvrdEnvironmentRaytracingSettings.Shadowing.FullSphere:
            .. py:data:: FullSphere


            UpperHemisphere: Generates shadows based on the upper hemisphere of the environment.

            .. _vredvrdEnvironmentRaytracingSettings.Shadowing.UpperHemisphere:
            .. py:data:: UpperHemisphere





Summary
=======

Functions:
    * :ref:`getAnisotropy() → float<vredvrdEnvironmentRaytracingSettings.getAnisotropy()>`
    * :ref:`getEmitCaustics() → bool<vredvrdEnvironmentRaytracingSettings.getEmitCaustics()>`
    * :ref:`getFilterSampledCaustics() → bool<vredvrdEnvironmentRaytracingSettings.getFilterSampledCaustics()>`
    * :ref:`getImportanceMapQuality() → integer<vredvrdEnvironmentRaytracingSettings.getImportanceMapQuality()>`
    * :ref:`getInteractiveIblSamplingQuality() → integer<vredvrdEnvironmentRaytracingSettings.getInteractiveIblSamplingQuality()>`
    * :ref:`getIsLightsource() → bool<vredvrdEnvironmentRaytracingSettings.getIsLightsource()>`
    * :ref:`getIsVisibleInReflections() → bool<vredvrdEnvironmentRaytracingSettings.getIsVisibleInReflections()>`
    * :ref:`getMaterialId() → integer<vredvrdEnvironmentRaytracingSettings.getMaterialId()>`
    * :ref:`getOverrideIblSampling() → bool<vredvrdEnvironmentRaytracingSettings.getOverrideIblSampling()>`
    * :ref:`getShadowingMode() → vrdEnvironmentRaytracingSettings.Shadowing<vredvrdEnvironmentRaytracingSettings.getShadowingMode()>`
    * :ref:`getStillFrameIblSamplingQuality() → integer<vredvrdEnvironmentRaytracingSettings.getStillFrameIblSamplingQuality()>`
    * :ref:`getUseAccurateReflections() → bool<vredvrdEnvironmentRaytracingSettings.getUseAccurateReflections()>`
    * :ref:`setAnisotropy(anisotropy) <vredvrdEnvironmentRaytracingSettings.setAnisotropy(anisotropy)>`
    * :ref:`setEmitCaustics(value) <vredvrdEnvironmentRaytracingSettings.setEmitCaustics(value)>`
    * :ref:`setFilterSampledCaustics(value) <vredvrdEnvironmentRaytracingSettings.setFilterSampledCaustics(value)>`
    * :ref:`setImportanceMapQuality(value) <vredvrdEnvironmentRaytracingSettings.setImportanceMapQuality(value)>`
    * :ref:`setInteractiveIblSamplingQuality(value) <vredvrdEnvironmentRaytracingSettings.setInteractiveIblSamplingQuality(value)>`
    * :ref:`setIsLightsource(value) <vredvrdEnvironmentRaytracingSettings.setIsLightsource(value)>`
    * :ref:`setIsVisibleInReflections(value) <vredvrdEnvironmentRaytracingSettings.setIsVisibleInReflections(value)>`
    * :ref:`setMaterialId(value) <vredvrdEnvironmentRaytracingSettings.setMaterialId(value)>`
    * :ref:`setOverrideIblSampling(value) <vredvrdEnvironmentRaytracingSettings.setOverrideIblSampling(value)>`
    * :ref:`setShadowingMode(mode) <vredvrdEnvironmentRaytracingSettings.setShadowingMode(mode)>`
    * :ref:`setStillFrameIblSamplingQuality(value) <vredvrdEnvironmentRaytracingSettings.setStillFrameIblSamplingQuality(value)>`
    * :ref:`setUseAccurateReflections(value) <vredvrdEnvironmentRaytracingSettings.setUseAccurateReflections(value)>`


Functions
=========


.. _vredvrdEnvironmentRaytracingSettings.getAnisotropy():
.. py:method:: vrdEnvironmentRaytracingSettings.getAnisotropy()

    Returns the anisotropy value of the texture.




    :return: The anisotropy value.
    :rtype: float

.. _vredvrdEnvironmentRaytracingSettings.getEmitCaustics():
.. py:method:: vrdEnvironmentRaytracingSettings.getEmitCaustics()

    Gets enable state of the HDR to emit photon caustics.




    :return: Current enable state of the HDR to emit photon caustics
    :rtype: bool

.. _vredvrdEnvironmentRaytracingSettings.getFilterSampledCaustics():
.. py:method:: vrdEnvironmentRaytracingSettings.getFilterSampledCaustics()

    Gets state of sample caustics.




    :return: Current state of sample caustics
    :rtype: bool

.. _vredvrdEnvironmentRaytracingSettings.getImportanceMapQuality():
.. py:method:: vrdEnvironmentRaytracingSettings.getImportanceMapQuality()

    Gets the quality level for the environment importance map used for IBL sampling.




    :return: Quality level from 1 to 8
    :rtype: integer

.. _vredvrdEnvironmentRaytracingSettings.getInteractiveIblSamplingQuality():
.. py:method:: vrdEnvironmentRaytracingSettings.getInteractiveIblSamplingQuality()

    Gets the override IBL sampling quality used during interactive rendering.




    :return: Quality level from 0 to 4
    :rtype: integer

.. _vredvrdEnvironmentRaytracingSettings.getIsLightsource():
.. py:method:: vrdEnvironmentRaytracingSettings.getIsLightsource()

    Gets the state of diffuse or glossy illumination calculation.




    :return: Current state of diffuse or glossy illumination calculation
    :rtype: bool

.. _vredvrdEnvironmentRaytracingSettings.getIsVisibleInReflections():
.. py:method:: vrdEnvironmentRaytracingSettings.getIsVisibleInReflections()

    Gets the visibility of the environment in reflections.




    :return: Current visibility of the environment in reflections
    :rtype: bool

.. _vredvrdEnvironmentRaytracingSettings.getMaterialId():
.. py:method:: vrdEnvironmentRaytracingSettings.getMaterialId()

    Gets the ID of the material.




    :return: CurrentID of the material
    :rtype: integer

.. _vredvrdEnvironmentRaytracingSettings.getOverrideIblSampling():
.. py:method:: vrdEnvironmentRaytracingSettings.getOverrideIblSampling()

    




    :return: Whether IBL sampling quality override is enabled
    :rtype: bool

.. _vredvrdEnvironmentRaytracingSettings.getShadowingMode():
.. py:method:: vrdEnvironmentRaytracingSettings.getShadowingMode()

    Gets the shadowing mode.




    :return: Current used shadowing mode
    :rtype: :ref:`vrdEnvironmentRaytracingSettings.Shadowing <vredvrdEnvironmentRaytracingSettings.Shadowing>`

.. _vredvrdEnvironmentRaytracingSettings.getStillFrameIblSamplingQuality():
.. py:method:: vrdEnvironmentRaytracingSettings.getStillFrameIblSamplingQuality()

    Gets the override IBL sampling quality used during still-frame rendering.




    :return: Quality level from 0 to 4
    :rtype: integer

.. _vredvrdEnvironmentRaytracingSettings.getUseAccurateReflections():
.. py:method:: vrdEnvironmentRaytracingSettings.getUseAccurateReflections()

    Gets state of the real environment geometry usage.




    :return: Current state of the real environment geometry usage
    :rtype: bool

.. _vredvrdEnvironmentRaytracingSettings.setAnisotropy(anisotropy):
.. py:method:: vrdEnvironmentRaytracingSettings.setAnisotropy(anisotropy)

    Sets the anisotropy value of the texture.



    :param anisotropy: The anisotropy value.
    :type anisotropy: float

    
    

.. _vredvrdEnvironmentRaytracingSettings.setEmitCaustics(value):
.. py:method:: vrdEnvironmentRaytracingSettings.setEmitCaustics(value)

    Enables the HDR to emit photon caustics. Only supported in Full Global Illumination mode with caustics (Photon Tracing mode 'Caustics + Indirect').



    :param value: New enable state of the HDR to emit photon caustics
    :type value: bool

    
    

.. _vredvrdEnvironmentRaytracingSettings.setFilterSampledCaustics(value):
.. py:method:: vrdEnvironmentRaytracingSettings.setFilterSampledCaustics(value)

    If enabled the maximum energy from caustic ray paths is limited to avoid excessive noise. If disabled caustics caused by the environment are accurately sampled.



    :param value: New state of sample caustics
    :type value: bool

    
    

.. _vredvrdEnvironmentRaytracingSettings.setImportanceMapQuality(value):
.. py:method:: vrdEnvironmentRaytracingSettings.setImportanceMapQuality(value)

    Sets the quality level for the environment importance map used for IBL sampling. The quality level is a scaling factor for the resolution of the importance map. Higher value require more memory.



    :param value: New quality level from 1 to 8. Default 1
    :type value: integer

    
    

.. _vredvrdEnvironmentRaytracingSettings.setInteractiveIblSamplingQuality(value):
.. py:method:: vrdEnvironmentRaytracingSettings.setInteractiveIblSamplingQuality(value)

    Sets the override IBL sampling quality used during interactive rendering.



    :param value: New quality level from 0 to 4. Default 1
    :type value: integer

    
    

.. _vredvrdEnvironmentRaytracingSettings.setIsLightsource(value):
.. py:method:: vrdEnvironmentRaytracingSettings.setIsLightsource(value)

    Does not calculate diffuse or glossy illumination, when disabled. Only one visible environment should have this enabled otherwise, VRED won't know which environment to use as a light source.



    :param value: State of diffuse or glossy illumination calculation
    :type value: bool

    
    

.. _vredvrdEnvironmentRaytracingSettings.setIsVisibleInReflections(value):
.. py:method:: vrdEnvironmentRaytracingSettings.setIsVisibleInReflections(value)

    Toggles the visibility of the environment in reflections.



    :param value: New visibility of the environment in reflections
    :type value: bool

    
    

.. _vredvrdEnvironmentRaytracingSettings.setMaterialId(value):
.. py:method:: vrdEnvironmentRaytracingSettings.setMaterialId(value)

    Sets the ID of the material for Renderpasses rendering.



    :param value: New ID of the material
    :type value: integer

    
    

.. _vredvrdEnvironmentRaytracingSettings.setOverrideIblSampling(value):
.. py:method:: vrdEnvironmentRaytracingSettings.setOverrideIblSampling(value)

    Enables overriding the global IBL sampling quality for sampling the environment map during interactive or still frame rendering.



    :param value: True to enable override
    :type value: bool

    
    

.. _vredvrdEnvironmentRaytracingSettings.setShadowingMode(mode):
.. py:method:: vrdEnvironmentRaytracingSettings.setShadowingMode(mode)

    Sets the shadowing mode to use for environment shadows in the Illumination Mode "Precomputed + Shadows", shadows on the Shadow Material and shadow lightsources generated for the environment.



    :param mode: New shadowing mode
    :type mode: :ref:`vrdEnvironmentRaytracingSettings.Shadowing <vredvrdEnvironmentRaytracingSettings.Shadowing>`

    
    

.. _vredvrdEnvironmentRaytracingSettings.setStillFrameIblSamplingQuality(value):
.. py:method:: vrdEnvironmentRaytracingSettings.setStillFrameIblSamplingQuality(value)

    Sets the override IBL sampling quality used during still-frame rendering.



    :param value: New quality level from 0 to 4. Default 1
    :type value: integer

    
    

.. _vredvrdEnvironmentRaytracingSettings.setUseAccurateReflections(value):
.. py:method:: vrdEnvironmentRaytracingSettings.setUseAccurateReflections(value)

    Uses the real environment geometry, when enabled, for more accurate diffuse and glossy illumination in Precomputed+IBL and Full Global Illumination Mode (at the cost of a 20 to 25 percent performance hit compared to the default finite sphere environment). It is disabled by default, so all diffuse and glossy reflection calculations are based on the virtual sphere of the environment.



    :param value: New state of the real environment geometry usage
    :type value: bool

    
    










