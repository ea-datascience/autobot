----------------
vrdIncandescence
----------------


.. _vredvrdIncandescence:
.. py:class:: vrdIncandescence

(Inherits :py:class:`vrdSceneObject`)

This class is used for all incandescence properties.







Summary
=======

Functions:
    * :ref:`getAreaLightQuality() → integer<vredvrdIncandescence.getAreaLightQuality()>`
    * :ref:`getBakeLayer() → integer<vredvrdIncandescence.getBakeLayer()>`
    * :ref:`getCastShadowOnShadowMaterial() → bool<vredvrdIncandescence.getCastShadowOnShadowMaterial()>`
    * :ref:`getColor() → QVector3D<vredvrdIncandescence.getColor()>`
    * :ref:`getColorSpectrum() → vrSpectrum<vredvrdIncandescence.getColorSpectrum()>`
    * :ref:`getDirectRaylightEvaluation() → bool<vredvrdIncandescence.getDirectRaylightEvaluation()>`
    * :ref:`getGroundShadowIntensity() → float<vredvrdIncandescence.getGroundShadowIntensity()>`
    * :ref:`getIlluminateShadowMaterial() → bool<vredvrdIncandescence.getIlluminateShadowMaterial()>`
    * :ref:`getImportanceMultiplier() → float<vredvrdIncandescence.getImportanceMultiplier()>`
    * :ref:`getIntensity() → float<vredvrdIncandescence.getIntensity()>`
    * :ref:`getInteractiveAreaLightQuality() → integer<vredvrdIncandescence.getInteractiveAreaLightQuality()>`
    * :ref:`getLightUnit() → vrLightTypes.Unit<vredvrdIncandescence.getLightUnit()>`
    * :ref:`getShadowIntensity() → float<vredvrdIncandescence.getShadowIntensity()>`
    * :ref:`getTexture() → vrdTexture<vredvrdIncandescence.getTexture()>`
    * :ref:`getUseAsLightSource() → bool<vredvrdIncandescence.getUseAsLightSource()>`
    * :ref:`setAreaLightQuality(quality) <vredvrdIncandescence.setAreaLightQuality(quality)>`
    * :ref:`setBakeLayer(layer) <vredvrdIncandescence.setBakeLayer(layer)>`
    * :ref:`setCastShadowOnShadowMaterial(s) <vredvrdIncandescence.setCastShadowOnShadowMaterial(s)>`
    * :ref:`setColor(color) <vredvrdIncandescence.setColor(color)>`
    * :ref:`setColorSpectrum(value) <vredvrdIncandescence.setColorSpectrum(value)>`
    * :ref:`setDirectRaylightEvaluation(s) <vredvrdIncandescence.setDirectRaylightEvaluation(s)>`
    * :ref:`setGroundShadowIntensity(intensity) <vredvrdIncandescence.setGroundShadowIntensity(intensity)>`
    * :ref:`setIlluminateShadowMaterial(s) <vredvrdIncandescence.setIlluminateShadowMaterial(s)>`
    * :ref:`setImportanceMultiplier(multiplier) <vredvrdIncandescence.setImportanceMultiplier(multiplier)>`
    * :ref:`setIntensity(intensity) <vredvrdIncandescence.setIntensity(intensity)>`
    * :ref:`setInteractiveAreaLightQuality(quality) <vredvrdIncandescence.setInteractiveAreaLightQuality(quality)>`
    * :ref:`setLightUnit(unit) <vredvrdIncandescence.setLightUnit(unit)>`
    * :ref:`setShadowIntensity(intensity) <vredvrdIncandescence.setShadowIntensity(intensity)>`
    * :ref:`setUseAsLightSource(s) <vredvrdIncandescence.setUseAsLightSource(s)>`


Functions
=========


.. _vredvrdIncandescence.getAreaLightQuality():
.. py:method:: vrdIncandescence.getAreaLightQuality()

    Gets the light sampling quality during still frame rendering.




    :return: Current quality from 0 to 4
    :rtype: integer

.. _vredvrdIncandescence.getBakeLayer():
.. py:method:: vrdIncandescence.getBakeLayer()

    Returns which lightmap layer the illumination from this light source is baked to with texture baking. See setBakeLayer(int).




    :return: The layer index.
    :rtype: integer

.. _vredvrdIncandescence.getCastShadowOnShadowMaterial():
.. py:method:: vrdIncandescence.getCastShadowOnShadowMaterial()

    




    :return: Whether other objects may cast shadows on the shadow material due to the materials incandescence illumination
    :rtype: bool

.. _vredvrdIncandescence.getColor():
.. py:method:: vrdIncandescence.getColor()

    




    :return: Current incandescence color
    :rtype: QVector3D

.. _vredvrdIncandescence.getColorSpectrum():
.. py:method:: vrdIncandescence.getColorSpectrum()

    Gets the incandescence color spectrum.




    :return: The current used spectrum for incandescence color.
    :rtype: vrSpectrum

.. _vredvrdIncandescence.getDirectRaylightEvaluation():
.. py:method:: vrdIncandescence.getDirectRaylightEvaluation()

    




    :return: Current evaluation state of ray lights on the surface.
    :rtype: bool

.. _vredvrdIncandescence.getGroundShadowIntensity():
.. py:method:: vrdIncandescence.getGroundShadowIntensity()

    Gets the shadow intensity of the geometry light on the shadow material.




    :return: Current shadow intensity
    :rtype: float

.. _vredvrdIncandescence.getIlluminateShadowMaterial():
.. py:method:: vrdIncandescence.getIlluminateShadowMaterial()

    




    :return: Whether the incandescence light may illuminate shadow material
    :rtype: bool

.. _vredvrdIncandescence.getImportanceMultiplier():
.. py:method:: vrdIncandescence.getImportanceMultiplier()

    




    :return: Current importance multiplier of the geometric light source for photon mapping
    :rtype: float

.. _vredvrdIncandescence.getIntensity():
.. py:method:: vrdIncandescence.getIntensity()

    




    :return: Current incandescence intensity
    :rtype: float

.. _vredvrdIncandescence.getInteractiveAreaLightQuality():
.. py:method:: vrdIncandescence.getInteractiveAreaLightQuality()

    Gets the light sampling quality during interactive rendering.




    :return: Current quality from 0 to 4
    :rtype: integer

.. _vredvrdIncandescence.getLightUnit():
.. py:method:: vrdIncandescence.getLightUnit()

    Returns the unit used for this light source.




    :return: The light unit.
    :rtype: :ref:`vrLightTypes.Unit <vredvrLightTypes.Unit>`

.. _vredvrdIncandescence.getShadowIntensity():
.. py:method:: vrdIncandescence.getShadowIntensity()

    Gets the intensity of shadows cast by the geometry light on BRDF-based materials.




    :return: Current shadow intensity
    :rtype: float

.. _vredvrdIncandescence.getTexture():
.. py:method:: vrdIncandescence.getTexture()

    Gets access to all properties of vrdIncandescenceTexture.




    :return: An :any:`vrdTexture <vredvrdTexture>` object, to read and write access of alls properties.
    :rtype: vrdTexture

.. _vredvrdIncandescence.getUseAsLightSource():
.. py:method:: vrdIncandescence.getUseAsLightSource()

    




    :return: Whether the material is used as a light source for other materials in the scene while raytracing
    :rtype: bool

.. _vredvrdIncandescence.setAreaLightQuality(quality):
.. py:method:: vrdIncandescence.setAreaLightQuality(quality)

    Sets the light sampling quality during still frame rendering.



    :param quality: New quality from 0 to 4. Default 1
    :type quality: integer

    
    

.. _vredvrdIncandescence.setBakeLayer(layer):
.. py:method:: vrdIncandescence.setBakeLayer(layer)

    For texture baking, a layer can be set with         :any:`vrdIlluminationBakeSettings.setLightsLayer(value) <vredvrdIlluminationBakeSettings.setLightsLayer(value)>` to bake only illumination from lights that have this bake layer number set. Use this function to set the layer for this light source. Default is 0.



    :param layer: The layer index. Supported values are 0 (base illumination/shadows) and 1 (separate illumination).
    :type layer: integer

    
    

.. _vredvrdIncandescence.setCastShadowOnShadowMaterial(s):
.. py:method:: vrdIncandescence.setCastShadowOnShadowMaterial(s)

    Allows other objects to cast shadows on the shadow material due to the material's incandescence illumination.



    :param s: New enable state
    :type s: bool

    
    

.. _vredvrdIncandescence.setColor(color):
.. py:method:: vrdIncandescence.setColor(color)

    Sets the incandescence color.



    :param color: New color
    :type color: QVector3D

    
    

.. _vredvrdIncandescence.setColorSpectrum(value):
.. py:method:: vrdIncandescence.setColorSpectrum(value)

    Sets the incandescence color spectrum.



    :param value: New spectrum for incandescence color
    :type value: vrSpectrum

    
    

.. _vredvrdIncandescence.setDirectRaylightEvaluation(s):
.. py:method:: vrdIncandescence.setDirectRaylightEvaluation(s)

    Enables evaluation of ray lights on the surface. This is used to be able to look into a ray file light and to make it visible in reflections and refractions. The origins of the rays should be on the surface to be evaluated.



    :param s: New state
    :type s: bool

    
    

.. _vredvrdIncandescence.setGroundShadowIntensity(intensity):
.. py:method:: vrdIncandescence.setGroundShadowIntensity(intensity)

    Sets the shadow intensity of the geometry light on the shadow material.



    :param intensity: New shadow intensity
    :type intensity: float

    
    

.. _vredvrdIncandescence.setIlluminateShadowMaterial(s):
.. py:method:: vrdIncandescence.setIlluminateShadowMaterial(s)

    Allows the incandescence light to illuminate shadow materials. See         :any:`vrdShadowMaterial.setReflectionMode(mode) <vredvrdShadowMaterial.setReflectionMode(mode)>`.



    :param s: New state
    :type s: bool

    
    

.. _vredvrdIncandescence.setImportanceMultiplier(multiplier):
.. py:method:: vrdIncandescence.setImportanceMultiplier(multiplier)

    A value higher than 1 increases the probability that a geometric light source emits photons when using photon mapping.



    :param multiplier: New importance multiplier. Default 1.0
    :type multiplier: float

    
    

.. _vredvrdIncandescence.setIntensity(intensity):
.. py:method:: vrdIncandescence.setIntensity(intensity)

    Sets the incandescence intensity.



    :param intensity: New intensity
    :type intensity: float

    
    

.. _vredvrdIncandescence.setInteractiveAreaLightQuality(quality):
.. py:method:: vrdIncandescence.setInteractiveAreaLightQuality(quality)

    Sets the light sampling quality during interactive rendering.



    :param quality: New quality from 0 to 4. Default 1
    :type quality: integer

    
    

.. _vredvrdIncandescence.setLightUnit(unit):
.. py:method:: vrdIncandescence.setLightUnit(unit)

    Sets the unit used for this light source. At the moment only candela per squaremeter is supported.



    :param unit: The unit.
    :type unit: :ref:`vrLightTypes.Unit <vredvrLightTypes.Unit>`

    
    

.. _vredvrdIncandescence.setShadowIntensity(intensity):
.. py:method:: vrdIncandescence.setShadowIntensity(intensity)

    Sets the intensity of shadows cast by the geometry light on BRDF-based materials.



    :param intensity: New shadow intensity
    :type intensity: float

    
    

.. _vredvrdIncandescence.setUseAsLightSource(s):
.. py:method:: vrdIncandescence.setUseAsLightSource(s)

    Enable to use objects with this material as a light source for other materials in the scene while raytracing.



    :param s: Enable state
    :type s: bool

    
    










