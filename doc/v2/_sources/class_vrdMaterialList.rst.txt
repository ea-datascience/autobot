---------------
vrdMaterialList
---------------


.. _vredvrdMaterialList:
.. py:class:: vrdMaterialList

(Inherits :py:class:`vrdObjectList`)

This class is used to manage children of a multi material.







Summary
=======

Functions:
    * :ref:`append(value) <vredvrdMaterialList.append(value)>`
    * :ref:`append(values) <vredvrdMaterialList.append(values)>`
    * :ref:`at(i) → vrdMaterial<vredvrdMaterialList.at(i)>`
    * :ref:`canInsert(value) → bool<vredvrdMaterialList.canInsert(value)>`
    * :ref:`clear() <vredvrdMaterialList.clear()>`
    * :ref:`contains(value) → bool<vredvrdMaterialList.contains(value)>`
    * :ref:`count(value) → integer<vredvrdMaterialList.count(value)>`
    * :ref:`data() → List[vrdMaterial]<vredvrdMaterialList.data()>`
    * :ref:`find(name) → vrdMaterial<vredvrdMaterialList.find(name)>`
    * :ref:`index(value, from, to) → integer<vredvrdMaterialList.index(value, from, to)>`
    * :ref:`insert(i, value) <vredvrdMaterialList.insert(i, value)>`
    * :ref:`insert(i, values) <vredvrdMaterialList.insert(i, values)>`
    * :ref:`move(from, to) → bool<vredvrdMaterialList.move(from, to)>`
    * :ref:`remove(value) → bool<vredvrdMaterialList.remove(value)>`
    * :ref:`removeAll(value) → integer<vredvrdMaterialList.removeAll(value)>`
    * :ref:`removeAt(i) → bool<vredvrdMaterialList.removeAt(i)>`
    * :ref:`size() → integer<vredvrdMaterialList.size()>`


Functions
=========


.. _vredvrdMaterialList.append(value):
.. py:method:: vrdMaterialList.append(value)

    Appends the value to this list.



    :param value: The value to append
    :type value: vrdMaterial

    
    

.. _vredvrdMaterialList.append(values):
.. py:method:: vrdMaterialList.append(values)

    Appends the items of the value list to this list.



    :param values: The values to append
    :type values: List[vrdMaterial]

    
    

.. _vredvrdMaterialList.at(i):
.. py:method:: vrdMaterialList.at(i)

    Get the value at the given index.



    :param i: 
    :type i: integer

    :return: i The index of the requested value
    :rtype: vrdMaterial

.. _vredvrdMaterialList.canInsert(value):
.. py:method:: vrdMaterialList.canInsert(value)

    Check, if the given entry can be inserted.



    :param value: 
    :type value: vrdMaterial

    :return: True, if insert is allowed
    :rtype: bool

.. _vredvrdMaterialList.clear():
.. py:method:: vrdMaterialList.clear()

    Removes all items from the list.




    
    

.. _vredvrdMaterialList.contains(value):
.. py:method:: vrdMaterialList.contains(value)

    Check, if an element is already in the list.



    :param value: 
    :type value: vrdMaterial

    :return: True, if the given value is in this list
    :rtype: bool

.. _vredvrdMaterialList.count(value):
.. py:method:: vrdMaterialList.count(value)

    Count the occurences of a given vlaue.



    :param value: 
    :type value: vrdMaterial

    :return: The number of times, the value has been found in the list
    :rtype: integer

.. _vredvrdMaterialList.data():
.. py:method:: vrdMaterialList.data()

    Get all entries of this list.




    :return: List of elements
    :rtype: List[vrdMaterial]

.. _vredvrdMaterialList.find(name):
.. py:method:: vrdMaterialList.find(name)

    Returns first occurrence with given name.



    :param name: Name
    :type name: string

    :return: 
    :rtype: vrdMaterial

.. _vredvrdMaterialList.index(value, from, to):
.. py:method:: vrdMaterialList.index(value, from=0, to=-1)

    Returns the index of the given value.



    :param value: The value to search
    :type value: vrdMaterial

    :param from: The index to start the search, default is 0
    :type from: integer

    :param to: The index to end the search, default is -1 to search until the end
    :type to: integer

    :return: The index or -1, if not found
    :rtype: integer

.. _vredvrdMaterialList.insert(i, value):
.. py:method:: vrdMaterialList.insert(i, value)

    Insert a value at a given position.



    :param i: The position, starting from 0
    :type i: integer

    :param value: The value to be inserted
    :type value: vrdMaterial

    
    

.. _vredvrdMaterialList.insert(i, values):
.. py:method:: vrdMaterialList.insert(i, values)

    Insert values at a given position.



    :param i: The position, starting from 0
    :type i: integer

    :param values: The values to be inserted
    :type values: List[vrdMaterial]

    
    

.. _vredvrdMaterialList.move(from, to):
.. py:method:: vrdMaterialList.move(from, to)

    Moves a values inside the list.



    :param from: The index to move
    :type from: integer

    :param to: The destination index
    :type to: integer

    :return: True on success, False otherwise
    :rtype: bool

.. _vredvrdMaterialList.remove(value):
.. py:method:: vrdMaterialList.remove(value)

    Remove the first occurences of the given value.



    :param value: 
    :type value: vrdMaterial

    :return: 
    :rtype: bool

.. _vredvrdMaterialList.removeAll(value):
.. py:method:: vrdMaterialList.removeAll(value)

    Remove all occurences of the given value.



    :param value: 
    :type value: vrdMaterial

    :return: The number of value that have been removed
    :rtype: integer

.. _vredvrdMaterialList.removeAt(i):
.. py:method:: vrdMaterialList.removeAt(i)

    Remove a value from the list.



    :param i: Index of the value to be removed
    :type i: integer

    :return: True, if the value has been removed
    :rtype: bool

.. _vredvrdMaterialList.size():
.. py:method:: vrdMaterialList.size()

    




    :return: Number of elements in this list.
    :rtype: integer










